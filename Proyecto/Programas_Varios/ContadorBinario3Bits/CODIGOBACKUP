CODIGO BACKUP 

1) 
// LÃ³gica secuencial para manejar el contador de ticks
/*
always @(posedge clk) begin
    if (start) begin
        ticks <= 17'b1;
        
            if (ticks_counter < max_ticks) begin
                    if (tick) begin
                        counter <= 0;
                        ticks_counter <= ticks_counter + 1;
                    end else begin
                        counter <= counter + 1;
                    end
            ticks <= ticks_counter;
            end
        
    end else begin
        ticks <= 1'b0;
        ticks_counter <= 0;
        counter <= 0;
    end
end
*/

2) 

//-----------------
// PULSOS
/* 
        if(~PB_state) begin // Boton cerrado prende LED0
                

                ///
                if (ticks_press != 0 && ticks_press < 28800) begin // CON ESTE
                
                        ledshort <= 1'b1; 
                        led0 <= 1'b0;     
                        ledlong <= 1'b0; 
                          
                end else if (ticks_press >= 28800) begin
                            
                        ledshort <= 1'b0; 
                        led0 <= 1'b0; 
                        ledlong <= 1'b1; 
                        
                end else if (ticks_press == 0) begin  // PARECIERA QUE SE SE PRENDE TANTO ESTE
                        ledshort <= 1'b0; 
                        led0 <= 1'b1;  
                        ledlong <= 1'b0;   
                end
        
        end else if (PB_state) begin
                        start_signal <= 1'b0;
                        ledshort <= 1'b0;
                        led0 <= 1'b0;
                        ledlong <= 1'b0;
        end
 */


 3) CODIGO QUE PRENDE LED 

OWO Count_3
 always @(posedge clk) begin
// CONTADOR BINARIO
                if(PB_down) begin // Solo funciona con PB_down el contador wtf xd 
                        if (contador == 8) begin
                                contador <= 0;
                        end else begin
                                contador <= contador + 1;
                        end              
                        
                end  

                if(PB_up) begin
                        $display("waowaowao");
                        //start_signal <= 1'b0;
                end

                if(PB_state) begin // BOTON ABIERTO = 1
                        start_signal <= 1'b0;
                end else if(~PB_state) begin // BOTON CERRADO = 0
                        start_signal <= 1'b1;
                end
end

ticks_generator 
always @(posedge clk) begin // ENCIENDE LED POR BOTON CERRADO
        if(start) begin
            ticks <= 17'b1; 
        end else if (~start) begin // APAGA LED POR BOTON ABIERTO
            ticks <= 17'b0; 
        end
    end
